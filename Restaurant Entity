create or replace table stage_sch.restaurant(
    restaurantid text,
    name text,
    cuisinetype text,
    pricing_for_2 text,
    restaurant_phone text with tag(common.pli_policy_tag = 'SENSITIVE'),
    operatinghours text,
    locationid text,
    activeflag text,
    openstatus text,
    locality text,
    restaurant_address text,
    latitude text,
    longitude text,
    createddate text,
    modifieddate text,
    _stg_file_name text,
    _stg_file_load_ts timestamp,
    _stg_file_md5 text,
    _copy_data_ts timestamp default current_timestamp
);


create or replace stream stage_sch.restaurant_stm
on table stage_sch.restaurant
append_only = true

list @stage_sch.stage_sch_csv_stg

copy into stage_sch.restaurant (restaurantid, name, cuisinetype, pricing_for_2, restaurant_phone, 
                      operatinghours, locationid, activeflag, openstatus, 
                      locality, restaurant_address, latitude, longitude, 
                      createddate, modifieddate, 
                      _stg_file_name, _stg_file_load_ts, _stg_file_md5, _copy_data_ts)
from (
    select 
        t.$1::text as restaurantid,        -- restaurantid as the first column
        t.$2::text as name,
        t.$3::text as cuisinetype,
        t.$4::text as pricing_for_2,
        t.$5::text as restaurant_phone,
        t.$6::text as operatinghours,
        t.$7::text as locationid,
        t.$8::text as activeflag,
        t.$9::text as openstatus,
        t.$10::text as locality,
        t.$11::text as restaurant_address,
        t.$12::text as latitude,
        t.$13::text as longitude,
        t.$14::text as createddate,
        t.$15::text as modifieddate,
        -- audit columns for tracking & debugging
        metadata$filename as _stg_file_name,
        metadata$file_last_modified as _stg_file_load_ts,
        metadata$file_content_key as _stg_file_md5,
        current_timestamp() as _copy_data_ts
     from @stage_sch.stage_sch_csv_stg/initial/restaurant/restaurant-delhi+NCR.csv t
)
file_format = (format_name = 'stage_sch.stage_sch_csv_file_format')
on_error = abort_statement;



----------------------------------------clean stage

create or replace table clean_sch.restaurant (
    restaurant_sk number autoincrement primary key,              
    restaurant_id number unique,                                        
    name string(100) not null,                                   
    cuisine_type string,                                         
    pricing_for_two number(10, 2),                               
    restaurant_phone string(15) WITH TAG (common.pli_policy_tag = 'SENSITIVE'),                                 
    operating_hours string(100),                                  
    location_id_fk number,                                       
    active_flag string(10),                                      
    open_status string(10),                                      
    locality string(100),                                        
    restaurant_address string,                                   
    latitude number(9, 6),                                       
    longitude number(9, 6),                                      
    created_dt timestamp_tz,                                     
    modified_dt timestamp_tz,                                    
    _stg_file_name string,                                       
    _stg_file_load_ts timestamp_ntz,                             
    _stg_file_md5 string,                                        
    _copy_data_ts timestamp_ntz default current_timestamp        
)

create or replace stream clean_sch.restaurant_stm
on table clean_sch.restaurant


insert into clean_sch.restaurant(
    RESTAURANT_ID, NAME, CUISINE_TYPE, PRICING_FOR_TWO, RESTAURANT_PHONE, OPERATING_HOURS, LOCATION_ID_FK, ACTIVE_FLAG, OPEN_STATUS, LOCALITY, RESTAURANT_ADDRESS, LATITUDE, LONGITUDE, CREATED_DT, MODIFIED_DT, _STG_FILE_NAME, _STG_FILE_LOAD_TS, _STG_FILE_MD5
)
select 
    try_cast(restaurantid as number) as restaurant_id,
    try_cast(name as string) as name,
    try_cast(cuisinetype as string) as cuisine_type,
    try_cast(pricing_for_2 as number(10, 2)) as pricing_for_two,
    try_cast(restaurant_phone as string) as restaurant_phone,
    try_cast(operatinghours as string) as operating_hours,
    try_cast(locationid as number) as location_id_fk,
    try_cast(activeflag as string) as active_flag,
    try_cast(openstatus as string) as open_status,
    try_cast(locality as string) as locality,
    try_cast(restaurant_address as string) as restaurant_address,
    try_cast(latitude as number(9, 6)) as latitude,
    try_cast(longitude as number(9, 6)) as longitude,
    try_to_timestamp_ntz(createddate, 'YYYY-MM-DD HH24:MI:SS.FF9') as created_dt,
    try_to_timestamp_ntz(modifieddate, 'YYYY-MM-DD HH24:MI:SS.FF9') as modified_dt,
    _stg_file_name,
    _stg_file_load_ts,
    _stg_file_md5
from 
    stage_sch.restaurant;



CREATE OR REPLACE TABLE CONSUMPTION_SCH.RESTAURANT_DIM (
RESTAURANT_HK NUMBER primary key,                   
RESTAURANT_ID NUMBER,                   
NAME STRING(100),                       
CUISINE_TYPE STRING,                   
PRICING_FOR_TWO NUMBER(10, 2),
RESTAURANT_PHONE STRING(15) WITH TAG (common.pli_policy_tag = 'SENSITIVE'),
OPERATING_HOURS STRING(100),
LOCATION_ID_FK NUMBER,
ACTIVE_FLAG STRING(10),
OPEN_STATUS STRING(10),
LOCALITY STRING(100),
RESTAURANT_ADDRESS STRING,
LATITUDE NUMBER(9, 6),
LONGITUDE NUMBER(9, 6),
EFF_START_DATE TIMESTAMP_TZ,
EFF_END_DATE TIMESTAMP_TZ,
IS_CURRENT BOOLEAN
)





merge into consumption_sch.restaurant_dim as t
using clean_sch.restaurant_stm as s
on 
    t.restaurant_id = s.restaurant_id and 
    t.name = s.name and
    t.cuisine_type=s.cuisine_type and
    t.pricing_for_two= s.pricing_for_two and
    t.restaurant_phone=s.restaurant_phone and
    t.operating_hours=s.operating_hours and
    t.
